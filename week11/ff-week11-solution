-- Week 11 challenge

-- Give the grants needed to execute the tasks
use role accountadmin;
grant EXECUTE MANAGED TASK on account to role ff_role;
grant EXECUTE TASK on account to role ff_role;

-- Use Frosty Friday role created in week 1 
use role ff_role;

-- Use database for challenges created in week 1
use database frosty_friday;

-- Set warehouse
use warehouse compute_wh;

-- Create schema for week11 challenge
create schema week11;

----------------------------------------
-- Setup steps as given in the challenge
----------------------------------------

-- Create the stage that points at the data.
create stage week_11_frosty_stage
    url = 's3://frostyfridaychallenges/challenge_11/';

list @week_11_frosty_stage;
/* Listed files:
name	                                                size
s3://frostyfridaychallenges/challenge_11/milk_data.csv	20,971
*/
	
-- Check the contents of the files
create or replace file format ff_check_files
    type = CSV
    field_delimiter = NONE
    record_delimiter = NONE
    skip_header = 0;

select 
    metadata$filename::string as file_name
  , metadata$file_row_number as row_number
  , $1::variant as contents
from @week_11_frosty_stage
  (file_format => 'ff_check_files')
order by 
    file_name
  , row_number
;

-- 10 columns, comma-limited, new line \n, 1 header row

-- Create the correct file format
create or replace file format ff_csv_file_format
    type = CSV
    field_delimiter = ','
    record_delimiter = '\n'
    skip_header = 1
;

-- recreate stage with correct file format	
create or replace stage week_11_frosty_stage
    url = 's3://frostyfridaychallenges/challenge_11/'
    file_format = ff_csv_file_format;
    


-- Create the table as a CTAS statement.
create or replace table frosty_friday.week11.week11 as
select m.$1 as milking_datetime,
        m.$2 as cow_number,
        m.$3 as fat_percentage,
        m.$4 as farm_code,
        m.$5 as centrifuge_start_time,
        m.$6 as centrifuge_end_time,
        m.$7 as centrifuge_kwph,
        m.$8 as centrifuge_electricity_used,
        m.$9 as centrifuge_processing_time,
        m.$10 as task_used
from @week_11_frosty_stage (file_format => 'ff_csv_file_format', pattern => '.*milk_data.*[.]csv') m;

-- Check the data
select *
from week11;

-- TASK 1: Remove all the centrifuge dates and centrifuge kwph and replace them with NULLs WHERE fat = 3. 
-- Add note to task_used.
create or replace task whole_milk_updates
    schedule = '1400 minutes'
as
    update frosty_friday.week11.week11
    set centrifuge_start_time = null
      , centrifuge_end_time = null
      , centrifuge_kwph = null
      , task_used = system$current_user_task_name() || ' at ' || current_timestamp
    where fat_percentage = '3';


-- TASK 2: Calculate centrifuge processing time (difference between start and end time) WHERE fat != 3. 
-- Add note to task_used.
create or replace task skim_milk_updates
    after frosty_friday.week11.whole_milk_updates
as
    update frosty_friday.week11.week11
    set centrifuge_processing_time = datediff(minute, centrifuge_start_time, centrifuge_end_time)
      , centrifuge_electricity_used = (datediff(minute, centrifuge_start_time, centrifuge_end_time) / 60) * centrifuge_kwph
      , task_used = system$current_user_task_name() || ' at ' || current_timestamp
    where fat_percentage != '3';

-- Resume the child task so that it will be executed after the root task 
alter task skim_milk_updates resume;

-- Manually execute the task.
execute task whole_milk_updates;

-- Check task history
select *
  from table(information_schema.task_history())
  order by scheduled_time desc;

-- Check that the data looks as it should.
select * from week11;
/* Few rows listed here as evidence:
MILKING_DATETIME	COW_NUMBER	FAT_PERCENTAGE	FARM_CODE	CENTRIFUGE_START_TIME	CENTRIFUGE_END_TIME	CENTRIFUGE_KWPH	CENTRIFUGE_ELECTRICITY_USED	CENTRIFUGE_PROCESSING_TIME	TASK_USED
25.8.2021 2:48	    1	        3	            7						                                                                                                        FROSTY_FRIDAY.WEEK11.WHOLE_MILK_UPDATES at 2022-10-06 00:34:51.106 -0700
18.2.2022 9:37	    2	        3	            7						                                                                                                        FROSTY_FRIDAY.WEEK11.WHOLE_MILK_UPDATES at 2022-10-06 00:34:51.106 -0700
...
5.9.2021 23:33	    1	        2	            6	        20.4.2022 20:23	        20.4.2022 21:40	    11.37	        14.59149621	                77	                        FROSTY_FRIDAY.WEEK11.SKIM_MILK_UPDATES at 2022-10-06 00:35:04.068 -0700
23.9.2021 23:29	    1	        1	            7	        5.5.2022 14:21	        5.5.2022 15:12	    10.96	        9.316	                    51	                        FROSTY_FRIDAY.WEEK11.SKIM_MILK_UPDATES at 2022-10-06 00:35:04.068 -0700

*/

-- Check that the numbers are correct.
select task_used, count(*) as row_count from week11 group by task_used;
/* Result:
TASK_USED	                                                                ROW_COUNT
FROSTY_FRIDAY.WEEK11.WHOLE_MILK_UPDATES at 2022-10-06 00:34:51.106 -0700	89
FROSTY_FRIDAY.WEEK11.SKIM_MILK_UPDATES at 2022-10-06 00:35:04.068 -0700	    183
*/
